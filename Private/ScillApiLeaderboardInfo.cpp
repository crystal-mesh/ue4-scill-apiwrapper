/**
 * SCILL API
 * SCILL gives you the tools to activate, retain and grow your user base in your app or game by bringing you features well known in the gaming industry: Gamification. We take care of the services and technology involved so you can focus on your game and content.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@scillgame.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "ScillApiWrapper/ScillApiLeaderboardInfo.h"

#include "ScillSDKModule.h"
#include "ScillApiWrapper/ScillApiHelpers.h"

#include "Templates/SharedPointer.h"

namespace ScillSDK
{

void ScillApiLeaderboardInfo::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (AppId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("app_id")); WriteJsonValue(Writer, AppId.GetValue());
	}
	if (LeaderboardId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("leaderboard_id")); WriteJsonValue(Writer, LeaderboardId.GetValue());
	}
	if (Name.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("name")); WriteJsonValue(Writer, Name.GetValue());
	}
	if (EventType.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("event_type")); WriteJsonValue(Writer, EventType.GetValue());
	}
	if (SortOrderAscending.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("sort_order_ascending")); WriteJsonValue(Writer, SortOrderAscending.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool ScillApiLeaderboardInfo::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("app_id"), AppId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("leaderboard_id"), LeaderboardId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("name"), Name);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("event_type"), EventType);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("sort_order_ascending"), SortOrderAscending);

	return ParseSuccess;
}

}
