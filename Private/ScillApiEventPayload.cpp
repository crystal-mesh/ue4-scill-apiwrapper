/**
 * SCILL API
 * SCILL gives you the tools to activate, retain and grow your user base in your app or game by bringing you features well known in the gaming industry: Gamification. We take care of the services and technology involved so you can focus on your game and content.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@scillgame.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "ScillApiWrapper/ScillApiEventPayload.h"

#include "ScillSDKModule.h"
#include "ScillApiWrapper/ScillApiHelpers.h"

#include "Templates/SharedPointer.h"

namespace ScillSDK
{

void ScillApiEventPayload::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (UserId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("user_id")); WriteJsonValue(Writer, UserId.GetValue());
	}
	if (SessionId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("session_id")); WriteJsonValue(Writer, SessionId.GetValue());
	}
	if (EventName.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("event_name")); WriteJsonValue(Writer, EventName.GetValue());
	}
	if (EventType.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("event_type")); WriteJsonValue(Writer, EventType.GetValue());
	}
	if (MetaData.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("meta_data")); WriteJsonValue(Writer, MetaData.GetValue());
	}
	if (TeamId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("team_id")); WriteJsonValue(Writer, TeamId.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool ScillApiEventPayload::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("user_id"), UserId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("session_id"), SessionId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("event_name"), EventName);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("event_type"), EventType);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("meta_data"), MetaData);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("team_id"), TeamId);

	return ParseSuccess;
}

}
