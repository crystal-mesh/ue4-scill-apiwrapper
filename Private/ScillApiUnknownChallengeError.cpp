/**
 * SCILL API
 * SCILL gives you the tools to activate, retain and grow your user base in your app or game by bringing you features well known in the gaming industry: Gamification. We take care of the services and technology involved so you can focus on your game and content.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@scillgame.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "ScillApiWrapper/ScillApiUnknownChallengeError.h"

#include "ScillSDKModule.h"
#include "ScillApiWrapper/ScillApiHelpers.h"

#include "Templates/SharedPointer.h"

namespace ScillSDK
{

void ScillApiUnknownChallengeError::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Error.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("error")); WriteJsonValue(Writer, Error.GetValue());
	}
	if (ErrorSlug.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("error_slug")); WriteJsonValue(Writer, ErrorSlug.GetValue());
	}
	if (StatusCode.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("status_code")); WriteJsonValue(Writer, StatusCode.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool ScillApiUnknownChallengeError::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("error"), Error);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("error_slug"), ErrorSlug);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("status_code"), StatusCode);

	return ParseSuccess;
}

}
